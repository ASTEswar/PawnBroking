<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOk.StateCommon.Back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        qAAAAKgBefSzxgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAJ5SURBVEhL7ZVL
        aBNBGMe3VYvooYoHFYogWDx4aS9WsQcPSSy2xQoGKZYexBeKVq2Pg1pWsdU07e4kPnClFBTjo5hsBlGr
        KCp4EdrgRQn2oAhVq81uIr30oJ/fpJM1s51Yld70B38SZub7zezsDKv8RyDkWaKEvEcU4j2qnPMt5a3T
        hO5rQHEGAwrxneGt04CqFqO0HfN9Qo7/fwfT1ivMtN4RT5P7cVsfoLb+lKb1izSl1aiAUoa6diau9goX
        s/Rk23/F3c+di+I2iaEUCockeoY71qAwlid/oqj+Eq6RQ7+S5Sh4P1ko5uaXIKy4sfnbT7knqZz1lHKN
        HNySeVg85Ja5c3tUg4q+xtyqoYj4xpWwp5JrChO39CATREY64dTr41J5zNJgtdnsyFm2PNvzFgCKuEbO
        nQ/GHBSMXR8JQvk1P1sVrO/fBn2jXcIE9Q93CPKqaBOYtoYTh6q5Sk7MInVMEE11Q3lkkyMo622AriE1
        K98/eEiQL7hcD1c/BrJ91NIDXCUHj+DB3CovvDsNs8/XOKIZ4XVQ278dSvA311Yc8kF78oTzZBiTq+Tg
        sWvLGwy7XxxwZLJsfLQzX47bpD/mKjnU0nblF7BUxZqk8sW9G+CW693gZYxwlRxqd1cKBRi2v6VGrSBn
        L//kq2PCOBZ8gr1cJYcdMzymSXdha+KwMIH33lahn2c8mgqXcVVhaJr4JcWwim/V/Et12TsyeYwW4oqp
        weNmuAW5rWoZaBXaWfD0vXzwKTiXl0+NAcYs2SSBN23ZC+Vqf07HyEJe+mdMXDyScAlzGca+fWwxfPjf
        QzPaMtPSG6mttaC02cxoK51vwT+CovwAF2yvfwPhelUAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EQAC4+sLjAAcY4wAD4hL1gAJBgAfIAA//9k=
</value>
  </data>
</root>